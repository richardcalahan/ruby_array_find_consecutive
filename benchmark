#!/usr/bin/env ruby

require 'benchmark'
require 'ruby_array_consecutive'

# A pure ruby implementation of Array#consecutive
class Array
  def r_consecutive step=1
    r_ary, c_ary = [[], []]
    self.each_with_index do |v, i|
      n = self[i+1]
      c_ary << v if c_ary.length == 0
      if v + step == n
        c_ary << n
      else
        r_ary << c_ary if c_ary.length > 1
        c_ary = []
      end
    end    
    return r_ary
  end
end

array = (1..1000000).map { rand(1..100) }
array += [5, 6, 7, 8, 9]
array += [1, 2.5, 4, 5.5, 7, 8.5]
array += (1..1000000).map { rand(1..100) }

Benchmark.bmbm do |x|
  x.report 'consecutive C    (integer interval)' do 
    array.consecutive
  end

  x.report 'consecutive Ruby (integer interval)' do 
    array.r_consecutive
  end

  x.report 'consecutive C    (float interval)' do 
    array.consecutive(1.5)
  end

  x.report 'consecutive Ruby (float interval)' do 
    array.r_consecutive(1.5)
  end
end
